version: "3.9"

networks:
  app-network:
    driver: bridge
  traefik:
    name: traefik
    external: true


volumes:
  db_data: { }
  storage_data: { }

services:
  nginx:
    image: ${APP_NAME}-nginx
    container_name: ${APP_NAME}-nginx
    restart: unless-stopped
    volumes:
      - storage_data:/var/www/html/public/storage
    networks:
      - app-network
    depends_on:
      - app
    healthcheck:
      test: [ 'CMD-SHELL', 'nc -vz 127.0.0.1 8080 && echo "true"  || exit 1' ]
      interval: 30s
      retries: 3
      timeout: 20s
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.example-app.entrypoints=web,websecure"
      - "traefik.http.services.example-app.loadbalancer.server.port=8080"
      - "traefik.http.routers.example-app.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)"
      - "traefik.http.routers.example-app.tls.certresolver=lets-encrypt"


  app:
    image: ${APP_NAME}-app
    container_name: ${APP_NAME}-app
    restart: unless-stopped
    volumes:
      - storage_data:/var/www/html/storage/app/public
    networks:
      - app-network
    depends_on:
      - db
    healthcheck:
      test: [ "CMD-SHELL", "php-healthcheck || exit 1" ]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 20s

  queue-default:
    image: ${APP_NAME}-app
    container_name: ${APP_NAME}-queue-default
    command: php artisan queue:work --queue=default --sleep=3 --tries=3
    restart: unless-stopped
    volumes:
      - storage_data:/var/www/html/storage/app/public
    depends_on:
      - app
    networks:
      - app-network

  db:
    image: 'mysql/mysql-server:8.0'
    container_name: ${APP_NAME}-db
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - 'db_data:/var/lib/mysql'
    networks:
      - app-network
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-p${DB_PASSWORD}'
      retries: 3
      timeout: 5s

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: '${RABBITMQ_USER}'
      RABBITMQ_DEFAULT_PASS: '${RABBITMQ_PASSWORD}'
    networks:
      - app-network

